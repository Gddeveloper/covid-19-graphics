---
title: COVID-19 Worldwide
datasets: ['dataset_top10', 'dataset_world_totals']
---

<div class="d-sm-flex align-items-center justify-content-between mb-4">
  <h1 class="h3 mb-0 text-gray-800">COVID-19 Worldwide</h1>
</div>

<div class="row">

  <script>
    var latest_numbers = {};
    for (var stat in covid19_dataset_world_totals['total']) {
      var data = covid19_dataset_world_totals['total'][stat];
      latest_numbers[stat] = data[data.length - 1];
    }
  </script>

  <div class="col-xl-4 col-md-6 mb-4">
    <div class="card border-left-primary shadow h-100 py-2">
      <div class="card-body">
        <div class="row no-gutters align-items-center">
          <div class="col mr-2">
            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Confirmed Cases</div>
            <div class="h5 mb-0 font-weight-bold text-gray-800"><script>document.write(latest_numbers['confirmed'].toLocaleString());</script></div>
          </div>
          <div class="col-auto">
            <i class="fas fa-meh fa-2x text-gray-300"></i>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-xl-4 col-md-6 mb-4">
    <div class="card border-left-danger shadow h-100 py-2">
      <div class="card-body">
        <div class="row no-gutters align-items-center">
          <div class="col mr-2">
            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Deaths</div>
            <div class="h5 mb-0 font-weight-bold text-gray-800"><script>document.write(latest_numbers['deaths'].toLocaleString());</script></div>
          </div>
          <div class="col-auto">
            <i class="fas fa-sad-tear fa-2x text-gray-300"></i>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-xl-4 col-md-6 mb-4">
    <div class="card border-left-success shadow h-100 py-2">
      <div class="card-body">
        <div class="row no-gutters align-items-center">
          <div class="col mr-2">
            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Recovered</div>
            <div class="h5 mb-0 font-weight-bold text-gray-800"><script>document.write(latest_numbers['recovered'].toLocaleString());</script></div>
          </div>
          <div class="col-auto">
            <i class="fas fa-smile fa-2x text-gray-300"></i>
          </div>
        </div>
      </div>
    </div>
  </div>

</div>

<%= partial(:standard_graph_container, :locals => { :title => "Top 10 countries by confirmed cases", :graph_id => "graph_confirmed" }) %>
<%= partial(:standard_graph_container, :locals => { :title => "Top 10 countries by confirmed cases (cases per million)", :graph_id => "graph_permil" }) %>
<%= partial(:standard_graph_container, :locals => { :title => "Top 10 countries by confirmed cases (from point of over 100 cases)", :graph_id => "graph_realigned" }) %>

<%= partial(:standard_graph_container, :locals => { :title => "Changes in confirmed, recovered and deaths per day", :graph_id => "graph_world_totals" }) %>

<script>
  // pretend we have all of them for this part
  var covid19_dataset = covid19_dataset_top10;

  var lines_permil = [];
  var lines_confirmed = [];

  for (var country_iso in covid19_dataset_top10['subseries']) {
    lines_confirmed.push(country_series_scaled(covid19_dataset, covid19_dataset['subseries'][country_iso], country_iso, scale_none, '')['confirmed']);
    lines_permil.push(country_series_scaled(covid19_dataset, covid19_dataset['subseries'][country_iso], country_iso, scale_permil, ' (per million)')['confirmed']);
  }

  // now take the 'confirmed' graph and shift the x values.
  // 
  var day0_threshold = 100;
  var adjusted_traces = [];
  for (var i in lines_confirmed) {
    var confirmed_trace = lines_confirmed[i];
    var adjusted_trace = $.extend(true, {}, confirmed_trace);
    var day0_index;
    for (var j in adjusted_trace.y) {
      if (adjusted_trace.y[j] >= day0_threshold) {
        day0_index = j;
        break;
      }
    }
    for (var j in adjusted_trace.x) {
      adjusted_trace.x[j] = j - day0_index;
    }
    adjusted_traces.push(adjusted_trace);
  }

  Plotly.newPlot(
    'graph_permil',
    lines_permil,
    $.extend({}, default_layout),
    default_config
  );

  Plotly.newPlot(
    'graph_confirmed',
    lines_confirmed,
    $.extend({}, default_layout),
    $.extend({}, default_config)
  );

  Plotly.newPlot(
    'graph_realigned',
    adjusted_traces,
    $.extend({}, default_layout, {xaxis: {type: "linear", rangemode: "nonnegative"}}),
    $.extend({}, default_config)
  );

  // and world totals of confirmed/deaths/recovered
  var world_totals_traces = [];
  for (var stat in covid19_dataset_world_totals['total']) {
    if (stat != 'confirmed' && stat != 'recovered' && stat != 'deaths') continue;
    var trace = covid19_dataset_world_totals['total'][stat];
    world_totals_traces.push({
      x: covid19_dataset_world_totals['timeseries_dates'],
      y: cumulative_to_delta(trace),
      name: stat[0].toUpperCase() + stat.slice(1),
      type: 'bar'
    });
  }

  Plotly.newPlot(
    'graph_world_totals',
    world_totals_traces,
    $.extend({}, default_layout, {barmode: 'stack'}),
    $.extend({}, default_config)
  );
</script>
